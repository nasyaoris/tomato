version: 2
jobs:
  dictionary-check:
    docker:
      - image: circleci/golang:1.14

    working_directory: /go/src/github.com/tomatool/tomato
    steps:
      - checkout

      - run:
          name: check consistency generated documentation and handler
          command: make check

  unit-test:
    docker:
      - image: circleci/golang:1.14

    working_directory: /go/src/github.com/tomatool/tomato
    steps:
      - checkout

      - run: mkdir -p /tmp/unit-test
      - run: echo "" > coverage.out
      - run: >
            for d in $(go list ./... | grep -v vendor); do
                go test -race -coverprofile=profile.out -covermode=atomic $d
                if [ -f profile.out ]; then
                    cat profile.out >> coverage.out
                    rm profile.out
                fi
            done
      - run: bash <(curl -s https://codecov.io/bash) -c -F unittests

  tomato-test:
    docker:
      - image: docker/compose:1.22.0

    working_directory: /go/src/github.com/tomatool/tomato
    steps:
      - checkout

      - setup_remote_docker

      - run:
          name: run integration test
          command: docker-compose up --abort-on-container-exit --build

      - run: docker-compose start tomato

      - run: mkdir -p /tmp/tomato-test
      - run: docker cp "$(docker-compose ps -q tomato)":/tmp/coverage.out /tmp/tomato-test/tomato-coverage.out
      - persist_to_workspace:
          root: /tmp/tomato-test
          paths:
            - tomato-coverage.out

  codecov-report:
    docker:
      - image: circleci/golang:1.14

    working_directory: /go/src/github.com/tomatool/tomato
    steps:
      - attach_workspace:
          at: /tmp/

      - run: mv /tmp/tomato-coverage.out coverage.out && bash <(curl -s https://codecov.io/bash) -c -F tomatotests


workflows:
  version: 2
  tests:
    jobs:
      - dictionary-check
      - unit-test:
          requires:
              - dictionary-check
      - tomato-test:
          requires:
              - dictionary-check
      - codecov-report:
          requires:
              - unit-test
              - tomato-test
